pro dgcont_image,image,x,y,invert=invert, $	window_scale=window_scale,aspect=aspect,interp=interp, $	nocontour=nocontour,background=background, $	c_colors=c_colors,c_linestyle=c_linestyle,c_thick=c_thick, $	follow=follow,levels=levels,nlevels=nlevels, $	xtitle=xtitle,ytitle=ytitle,title=title,subtitle=subtitle;+; NAME:;	CONT_IMAGE; PURPOSE:;	Overlay an image and a contour plot.; CATEGORY:;	General graphics.; CALLING SEQUENCE:;	CONT_IMAGE, IMAGE[,X,Y]; INPUTS:;	IMAGE = 2 dimensional array to display.; OPTIONAL INPUTSL;	X = 1 dimensional array of x-axis values.;	Y = 1 dimensional array of y-axis values.; KEYWORD PARAMETERS:;	/WINDOW_SCALE = set to scale the window size to the image size,;		otherwise the image size is scaled to the window size.;		Ignored when outputting to devices with scalable pixels.;	/ASPECT = set to retain image's aspect ratio.  Assumes square;		pixels.  If /WINDOW_SCALE is set, the aspect ratio is;		retained.;	/INTERP = set to bi-linear interpolate if image is resampled.;	/NOCONTOUR = set to just display framed image.;	/INVERT = set to invert the image scale, ie image=255-image;	plus IDL graphics keywords: xtitle,ytitle,subtitle,title,background.; OUTPUTS:;	No explicit outputs.; COMMON BLOCKS:;	none.; SIDE EFFECTS:;	The currently selected display is affected.; RESTRICTIONS:;	None that are obvious.; PROCEDURE:;	If the device has scalable pixels then the image is written over;	the plot window.; MODIFICATION HISTORY:;	Adapted from IMAGE_CONT.;	D. L. Windt, AT&T Bell Laboratories, Nov 1989.;-on_error,2if keyword_set(xtitle) then xtitle=xtitle else xtitle=!x.titleif keyword_set(ytitle) then ytitle=ytitle else ytitle=!y.titleif keyword_set(title) then title=title else title=!p.titleif keyword_set(subtitle) then subtitle=subtitle else subtitle=!p.subtitleif keyword_set(background) then back=background else back=!p.backgrounda=imageif keyword_set(invert) then a=255-asz = size(a)			;Size of imageif sz(0) lt 2 then message,'CONT_IMAGE -- parameter not 2D'	;set window used by contourcontour,[[0,0],[1,1]],/nodata,xstyle=4,ystyle=4,xtitle=' ',ytitle=' ', $    subtitle=' ',title=' ',back=backpx = !x.window * !d.x_vsize	;Get size of window in device unitspy = !y.window * !d.y_vsizeswx = px(1)-px(0)		;Size in x in device unitsswy = py(1)-py(0)		;Size in Ysix = float(sz(1))		;Image sizessiy = float(sz(2))aspi = six / siy		;Image aspect ratioaspw = swx / swy		;Window aspect ratiof = aspi / aspw			;Ratio of aspect ratiosif (!d.flags and 1) ne 0 then begin	;Scalable pixels?  if keyword_set(aspect) then begin	;Retain aspect ratio?				;Adjust window size	if f ge 1.0 then swy = swy / f else swx = swx * f	endif  tv,a,px(0),py(0),xsize = swx, ysize = swy, /deviceendif else begin	;Not scalable pixels	   if keyword_set(window_scale) then begin ;Scale window to image?	tv,a,px(0),py(0)	;Output image	swx = six		;Set window size from image	swy = siy    endif else begin		;Scale window	if keyword_set(aspect) then begin		if f ge 1.0 then swy = swy / f else swx = swx * f		endif		;aspect	tv,poly_2d(a ,$	;Have to resample image		[[0,0],[six/swx,0]], [[0,siy/swy],[0,0]],$		keyword_set(interp),swx,swy), $		px(0),py(0)	endelse			;window_scale  endelse			;scalable pixelsif n_params() ge 2 then ax=x else ax=findgen(sz(1))if n_params() eq 3 then ay=y else ay=findgen(sz(2))if n_elements(c_colors) gt 0 then c_col=c_colors else c_col=[255]if n_elements(c_linestyle) gt 0 then c_lin=c_linestyle else c_lin=[0]if n_elements(c_thick) gt 0 then c_thi=c_thick else c_thi=[1]if keyword_set(nlevels) then nlev=nlevels else nlev=0if keyword_set(invert) then a=255-aif n_elements(levels) gt 0 then begin    contour,a,ax,ay,/noerase,/xst,/yst,nodata=keyword_set(nocontour), $        pos=[px(0),py(0),px(0)+swx,py(0)+swy],/dev, $	c_col=c_col,c_lin=c_lin,c_thi=c_thi, $        levels=levels,follow=keyword_set(follow), $        xtitle=xtitle,ytitle=ytitle,title=title,subtitle=subtitle    endif else begin    contour,a,ax,ay,/noerase,/xst,/yst,nodata=keyword_set(nocontour), $        pos=[px(0),py(0),px(0)+swx,py(0)+swy],/dev, $	c_col=c_col,c_lin=c_lin,c_thi=c_thi, $        follow=keyword_set(follow), $        xtitle=xtitle,ytitle=ytitle,title=title,subtitle=subtitle    endelsereturnend