Pro Check_match, fir, sec, columns = col, signal = sig, force = frc, tau = tau,$
	zoom = zom, output = oup, factor = mfac, _extra= _e

;+
; NAME:
;		CHECK_MATCH
; VERSION:
;		7.15
; PURPOSE:
;		Shows quality of match between scans.
; CATEGORY:
;		Surface specific.
; CALLING SEQUENCE:
;		CHECK_MATCH, FIR, SEC, [,keywords]
; INPUTS:
;	FIR, SEC
;		Scan numbers or lists of scan numbers.  Can be of any list form
;		acceptable by SCAN_LIST_VER  (see there).  Note, however, the following:
;
;		1)	If FIR or SEC translates to a single scan number, it is used as is.
;		2)	If FIR or SEC translates to a group of scan numbers (for example,
;			'8-10') then it is assumed that one of the scans in the group is
;			the signal with the rest being background.  In such case, background
;			subtraction is performed and the group yields a single (background
;			subtracted) scan.
;		3)  If FIR or SEC resolves to a "signed" group of scan numbers, i.e. a
;			group of scan numbers some of which are preceded by minus sign,
;			then the "positive scans" are taken as signal and the negative as
;			background.  Again, the group yields a single (background
;			subtracted) scan.
;
;		Regarding which of the scans is taken as signal (in the absence of
;		plus-minus signs), see keyword SIGNAL.
;
; OPTIONAL INPUT PARAMETERS:
;		None.
; KEYWORD PARAMETERS:
;	COLUMNS
;		An integer vector with 2 or 3 entries, specifying which of the data
;		columns present in the scan should be used.  The first two entries are
;		the numbers of the X and Y columns (either counting from 0 up, from
;		left, or from -1 down, from right).  If a third entry is provided, it
;		is used as the number of a normalization column.
;
;		The default values are [2,-1,-2]
;	SIGNAL
;		Integer, specifies the number (counting from 0 up) of the "signal" scan
;		within scan groups.  The default value is 1, which means the second scan
;		(the middle one in a 3-scan group).  SIGNAL is ignored for "signed
;		groups".
;	/FORCE
;		Switch.  If set, forces junction even when there is no overlap between
;		some scans.  This involves extrapolation which greatly increases
;		uncertainties, so it should be used with care.
;	TAU
;		The time constant for the calculation of pileup correction.  If zero or
;		not given, no correction is performed.
;	/ZOOM
;		Switch.  If set, only the overlap region of the two scans is displayed.
;	/OUTPUT
;		Switch.  If set, printer output is performed.
;	FACTOR
;		Optional output, see below.
;	_EXTRA
;		A formal keyword, used to transfer additional keywords to
;		SPEC_FILE_INFO and SCAN_SHOW.  Not to be used directly.
;
;		Note:	If any of the keywords /PNG, /JPG or /BMP is invoked in call
;				to CHECK_MATCH, whether directrly or through _EXTRA, the
;				appropriate image file will be generated by WIMG_MM.
; OUTPUTS:
;		Standard output is graphics only, a plot of FIR and SEC multiplied by
;		the appropriate scaling factors, as function of Q_z.  Additional
;		outputs are provided through the output parameters.
; OPTIONAL OUTPUT PARAMETERS:
;	FACTOR
;		The multiplicative factor of the match, i.e. the factor by which the
;		second scan is multiplied in order to match with the first.
; COMMON BLOCKS:
;		SPEC_FILE.  See the routine SPEC_FILE_INFO for description.
; SIDE EFFECTS:
;		None.
; RESTRICTIONS:
;		None other than the scans on the list must in fact exist.
; PROCEDURE:
;		Reads the scans, subtracts backgrounds as needed, and joins them
;		together.  Calls SCAN_CLEAN, SCAN_JOIN, SCAN_LIST_VER, SCAN_ORDER,
;		SCAN_SCALE, SCAN_SHOW and SPEC_FILE_INFO, from SPEC.  Also calls ARREQ,
;		DEFAULT, OUTPUT, PLVAR_KEEP, SPLIT_XY, STRMATCH_MM, and WHERINSTRUCT,
;		from MIDL.
; MODIFICATION HISTORY:
;		Created 15-JUN-2004 by Mati Meron.
;		Modified 15-DEC-2005 by Mati Meron.  Internal changes.
;		Modified 20-NOV-2007 by Mati Meron.  Enabled saving in JPG and BMP
;		formats (in addition to PNG).
;		Modified 25-MAR-2010 by Mati Meron.  Common block update.
;-

	common spec_file, exs, fildat, n_s, n_m, n_l, n_smax, itop
	on_error, 1

	snams =  ['fir','sec']

	col = Default(col,[2,-1,-2],/dtyp)
	sig = Default(sig,1,/dtyp)
	n = 2

	if n_params() eq n then begin
		Spec_file_info, _extra = _e
		rlis = lonarr(n)
		for i = 0l, n-1 do begin
			idum = execute('l = Scan_list_ver(' + snams[i] + ',lis=lis)')
			if l gt 0 then begin
				pos = where(lis gt 0) > 0
				rlis[i] = ((lis[pos])[Scan_order(lis[pos],col=col)])[0]
			endif else message, 'Input errors!'
		endfor
		j = Scan_order(rlis,col=col)
		tarr = strarr(n)
		for i = 0l, n-1 do begin
			idum = execute('l = Scan_list_ver(' + snams[j[i]] + ',lis=lis)')
			if l gt 1 then begin
				if Arreq(lis,abs(lis)) or Arreq(-lis,abs(lis)) then begin
					sml = sig mod l
					lis = -abs(lis)
					lis[sml] = -lis[sml]
				endif
			endif else lis = abs(lis)
			tarr[i] = strjoin(string(lis),',')
			if l gt 1 then tarr[i] = ' [' + tarr[i] + ']'
			clean = Scan_clean(lis,col=col,/inter,tau=tau)
			if i gt 0 then begin
				ssec = clean
				full = Scan_join(sfir,ssec,force=frc,fact=fac,_extra=_e)
				mfac = fac[1]
				ssec = Scan_scale(ssec,1.*mfac)
			endif else sfir = clean
		endfor
	endif else message, '2 scans or groups of scans required!'

	tarr = strcompress(tarr)
	tit = fildat.name + '!c' + 'First: ' + tarr[0] + ' ; Second: ' + tarr[1]
	xtit = 'Q!dz!n'
	pcol = [!pcol.pink, !pcol.cyan]
	pscol = [11,12]
	if keyword_set(zom) then begin
		nf = Split_xy(sfir,x=xf,y=yf)
		ns = Split_xy(ssec,x=xs,y=ys)
		dumf = where(xf ge xs[0], ndumf)
		if ndumf le 1 then dumf = nf + [-1,-2] else dumf = [dumf,nf] - 1
		dums = where(xs le xf[nf-1], ndums)
		if ndums le 1 then dums = [0,1] else dums = [0,dums+1]
		sfir = sfir[*,dumf]
		ssec = ssec[*,dums]
	endif

	Plvar_keep, act = 'sav'
	!y.margin=[4,4]
	Scan_show, sfir, ssec, lcol= pcol, tit= tit, xtit= xtit, call=3,_extra = _e
	if keyword_set(oup) then begin
		pcol = !p.color
		check = Wherinstruct('dev',_e)
		if check ge 0 then $
		if Strmatch_mm(_e.(check),['PS','EPS']) ge 0 then pcol = pscol
		com= 'Scan_show,sfir,ssec,lcol=pcol,tit=tit,xtit=xtit,/nofile,_extra=_e'
		Output, com, sub = 'sfir,ssec,pcol,tit,xtit,_e', $
		sfir, ssec, pcol, tit, xtit, Default(_e,{zzzz:0}), _extra = _e
	endif
	Plvar_keep, act = 'res'

	return
end