Pro Pattern, periods, ratio, hor_ver, wiggle = wig, $
	angle_range = ang, num_angles = numa, list_angles = lisa, redefine = red, $
	rand_space = rans, rand_width = ranw, gaussian = gau, $
	edge = edg, colors = cls, background = bck, degrees = deg, _extra=_e

;+
; NAME:
;		PATTERN
; VERSION:
;		8.15
; PURPOSE:
;		Draws a pattern of striped rectangles as generated by STRIPES (see 
;		there).
; CATEGORY:
;		General Graphics.
; CALLING SEQUENCE:
;		PATTERN, PERIODS, RATIO, HOR_VER, XLIMS = XLS, YLIMS = YLS $
;		[, optional keywords]
; INPUTS:
;	PERIODS
;		Integer scalar, number of periods (i.e. foreground-background stripe
;		pairs, in each striped rectangle.  Mandatory.
; OPTIONAL INPUT PARAMETERS:
;	RATIO
;		Floating scalar, foreground to background width ratio within a period.
;		Defaults to 0.5.
;	HOR_VER
;		Two element integer vector.  Number of rows and columns of rectangles.
;		Defaults to [1,1].
; KEYWORD PARAMETERS:
;	WIGGLE
;		Optional scalar or 3-element vector.  Specifies line wiggle parameters
;		in a [period,amplitude,phase] order (see WIGGLINE).
;	ANGLE_RANGE
;		Floating scalar, specifies absolute value limit of the angle range (to
;		be used with ROTATE), in radians, unless /DEGREES is set.
;	NUM_ANGLES													|
;		Scalar.  If given, the rotation angles are randomly		|	At most one
;		chosen from a discrete list evenly distributed within	|	of these 	two may be 
;		[-ANGLE_RANGE, ANGLE_RANGE]								|	two may be 
;	LIST_ANGLES													|	given.
;		Vector.  If given, the rotation angles are chosen 		|
;		from LIST_ANGLES.										|
;	REDEFINE
;		Numeric vector.  If given and number of elements equal to NUM_ANGLES,
;		the rotation angles are chosen from REDEFINE.
;	RAND_SPACE
;		Floating scalar, specifies magnitude of random variation of the stripes'
;		locations.  Defaults to 0 (i.e. no variation).
;	RAND_WIDTH
;		Floating scalar, specifies magnitude of random variation of the stripes'
;		widths.  Defaults to 0 (i.e. no variation).
;	/GAUSSIAN
;		Switch.  If set, the random variations specified above follow a Gaussian
;		distribution.  Default is uniform distribution.
;	/EDGE
;		Switch.  If set, one extra foreground color stripe is added at the end 
;		of each striped rectangle so that both edges are same color.
;	COLORS
;		Integer scalar or vector containing a list of true type color codes.  If
;		more than one entry is present, the colors of the stripes are cycled.
;		If not given, the system color !P.COLOR is used.
;	BACKGROUND
;		Integer scalar, specifying a background color.  If not given, 
;		!P.BACKGROUND is used.
;	/DEGREES
;		Switch.  Specifies that the rotation angles is given in degrees.
;	_EXTRA
;		A formal keyword used to pass keywords to embedded routines.  Not to be
;		used directly.
;
;		Note:	All RECTAN keywords can be used.
; OUTPUTS:
;		None.
; OPTIONAL OUTPUT PARAMETERS:
;		None.
; COMMON BLOCKS:
;		None.
; SIDE EFFECTS:
;		None.
; RESTRICTIONS:
;		Only restrictions related to RECTAN keywords.
; PROCEDURE:
;		Straightforward, through multiple calls to STRIPES, in MIDL.  Also calls
;		BOX, DEFAULT, ONE_OF, PLVAR_KEEP and RANDISC, from MIDL.
; MODIFICATION HISTORY:
;		Created 5-JAN-1995 by Mati Meron.
;		Checked for operation under Windows, 30-JAN-2001, by Mati Meron.
;		Slightly modified 15-MAR-2012 by Mati Meron.  Added keyword BACKGROUND.
;-

	on_error, 1
	ratio = Default(ratio,0.5,/dtyp)
	hv = Default(hor_ver, [1l,1l],/dtyp)
	np = hv(0)*hv(1)
	if n_elements(wig) ne 0 then wwig = [3.,1,1]*wig

	which = 1 + One_of(numa,lisa)
	case which of
		0	:	begin
					if keyword_set(gau) then dist = 0.5*randomn(se,np) else $
					dist = 2*randomu(se,np)-1
				end
		1	:	begin
					if n_elements(red) eq numa then begin
						dist = Randisc(se,np,amp=numa-1,bin=gau)
						rdist = round(dist)
						for i = 0, numa - 1 do begin
							tem = where(rdist eq 2*i + 1 - numa, ntem)
							if ntem gt 0 then dist(tem) = red(i)
						endfor
					endif else dist = Randisc(se,np,amp=numa-1,bin=gau,/norm)
				end
		2	:	begin
					dist = lisa
					while n_elements(dist) lt np do dist = [dist,lisa]
					dist = dist(0:np-1)
				end
		else:
	endcase
	rangs = Default(ang,0.)*dist 

	xb = [-1.,1.]
	yb = [0.,1.]
	xp = [-2.,2.]
	h = 1./(periods + ratio*keyword_set(edge))
	yp = [-h*periods, 1. + h*periods]

	Plvar_keep, act = 'save'
	!x.margin = [0,0]
	!y.margin = [0,0]
	!p.multi = [0,hv(0),hv(1)]

	for i = 0l, np - 1 do begin
		Box, xb, yb, truasp = 'xcen', /update
		Stripes, 3*periods, ratio, rand_space=rans, rand_width=ranw, gauss=gau,$
		xlims = xp, ylims = yp, edge = edg, colors = cls, background = bck, $
		rotate = rangs(i), degrees = deg, xwig = wwig, noclip = 0, _extra = _e
		wait, 0.001
	endfor
	Plvar_keep, act = 'rest'

	return
end